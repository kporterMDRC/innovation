[["index.html", "Using LLM’s to Code Recipes Starters Create code from scratch Demystifying Code or Output Troubleshooting Documentation Code expansion or improvement Translation Data generation (#generate)", " Using LLM’s to Code Your Name 2024-12-06 Recipes Starters Make an R notebook or R Bookdown site that starts from a text outline Build a Shiny dashboard template Create code from scratch Generate new code using a specific package Generate variations based on an example Generate unit tests for a function Demystifying Code or Output Explain complex code Explain output Troubleshooting Debug confusing error messages Fix a Git merge conflict Documentation Generate roxygen2 documentation Create README.md files Write package vignettes Document data dictionaries Create function usage examples Code expansion or improvement Optimize code for speed Add error handling Convert code to function Make code more modular Translation Translate coding languages Translate Word to markdown Data generation (#generate) Synthesize data to match what is need to run a script Synthesize data to match a set of column names "],["shots.html", "Shots", " Shots "],["mixing-in-an-llm.html", "Mixing in an LLM", " Mixing in an LLM "],["template.html", "Starters", " Starters Make an R notebook or R Bookdown site that starts from a text outline Ingredients: Text outline with hierarchical structure Desired output type (notebook or bookdown) Title for the document/site Author information (optional) Theme preferences (optional) Prompt: Please convert this outline into [choose: an R notebook OR a bookdown site]: [paste outline here] Requirements: 1. Output type: [choose one] - Single R notebook (html_notebook, pdf_document, word_document) - Bookdown site (gitbook, pdf_book, epub_book) 2. Title: [specify title] 3. Author: [specify author if desired] 4. Structure preferences: - [specify if you want chapters split into files (bookdown only)] - [specify header level preferences] - [specify if you want placeholder chunks] - [specify theme preferences] 5. Special features: [choose any] - Table of contents - Section numbering - Chapter cross-references (bookdown only) - Figure/table captions - Custom CSS Tips: For notebooks: Keep all content in one file Use headers for navigation Consider chunk naming conventions For bookdown: Use separate .Rmd files for chapters Number files to control order (e.g., 01-intro.Rmd) Include index.Rmd for site configuration Consider _bookdown.yml for site settings Serves: Single document reports (notebooks) Multi-chapter books (bookdown) Documentation sites Course materials Technical manuals Project documentation Example: Please convert this outline into an R notebook structure: Writing Effective Functions 1. Function Basics - Purpose - Components 2. Best Practices - Naming conventions - Documentation 3. Examples - Simple function - Complex function Requirements: 1. Output format: html_notebook 2. Title: Guide to Writing Effective R Functions 3. Structure preferences: - Add placeholder code chunks where examples would go - Include section numbers - Add a table of contents Build a Shiny dashboard template Ingredients: List of desired dashboard components Layout structure preferences Navigation style Theme preferences Intended dashboard functionality Prompt: Please create a Shiny dashboard template with these specifications: Layout: 1. Navigation: [choose one] - Sidebar menu - Navbar - Tabset panel 2. Components: [list desired elements] - Header/title - Sidebar widgets - Main panels - Footer 3. Theme: [specify preferences] - Dashboard theme - Color scheme - Custom CSS Content Areas: [paste outline of content areas] Widgets needed: [list interactive elements needed] Special features: [choose any] - Collapsible panels - Custom branding - Loading spinners - Notifications - User authentication Tips: Specify layout before content List all interactive widgets upfront Consider mobile responsiveness needs Include error handling preferences Mention any conditional panels Specify reactive dependencies Note any performance requirements Serves: Data visualization dashboards Monitoring applications Interactive reports Best used by coders with some knowledge of Shiny Example: Please create a Shiny dashboard template with these specifications: Layout: 1. Navigation: Sidebar menu 2. Components: - Company logo in header - Sidebar with date range and filters - Three main content areas - Info footer 3. Theme: - dashboardthemes::custom_theme - Blue/white color scheme Content Areas: 1. Overview - Summary metrics - Trend chart 2. Details - Data table - Filter 3. Analysis - Interactive plots - Download reports Widgets needed: - Date range picker - Select inputs for filtering - Action buttons for reports - Data table with download - Plot customization options Special features: Loading spinners for plots Collapsible sidebar Error notifications Export functionality Generate new code using a specific package Ingredients: Package name Specific task Any helpful context Instructions: Using package, write code to task. Context: constraints (optional) Tips: Add data structure for more specific results. Mention actual names of objects, rows and columns for easier pasting. Specify output format if you have a preference. Serves: Small workflows Best for discrete tasks rather than full applications. Works well for both data manipulation and visualization tasks. Example: Using dplyr, write code to filter the tibble my_tibble to rows in which the column employed is TRUE and assign the result to a new tibble called new_tibble. Context: Advanced programmer who is rusty with dplyr. Generate variations based on an example Generate unit tests for a function "],["explain.html", "Demystifying Code or Output", " Demystifying Code or Output Explain complex code Ingredients: - Working code snippet - Any error messages (if relevant) - Package versions (if causing issues) - Context about what seems unclear Instructions: Please explain how this code works: [paste code here] Specifically, I don’t understand [unclear parts]. Tips: - Share what you think it does to get better corrections - Include sample input/output if available - Mention your R experience level for appropriate detail - Point out specific lines or functions that confuse you Serves: - Complex functions or pipelines - Multi-step operations - Package-specific syntax questions - Unfamiliar coding patterns Example: Please explain how this code works: map_df(list_of_files, ~read_csv(.x) %&gt;% select(starts_with(&quot;Q&quot;)) %&gt;% pivot_longer(everything())) Specifically, I don’t understand what the .x does and why we need it. Context: Comfortable with basic R but new to purrr. Build a Shiny dashboard template Ingredients: List of desired dashboard components Layout structure preferences Navigation style Theme preferences Intended dashboard functionality Prompt: Please create a Shiny dashboard template with these specifications: Layout: 1. Navigation: [choose one] Sidebar menu Navbar Tabset panel 2. Components: [list desired elements Header/title Sidebar widgets Main panels Footer 3. Theme: [specify preferences] Dashboard them Color scheme Custom CSS Content Areas: [paste outline of content areas] Widgets needed: [list interactive elements needed] Special features: [choose any] Collapsible panels Custom branding Loading spinners Notifications User authentication Tips: Specify layout before content List all interactive widgets upfront Consider mobile responsiveness needs Include error handling preferences Mention any conditional panels Specify reactive dependencies Note any performance requirements Serves: Data visualization dashboards Monitoring applications Interactive reports Business analytics tools Administrative interfaces Decision support systems Example: Please create a Shiny dashboard template with these specifications: Layout: 1. Navigation: Sidebar menu 2. Components: - Company logo in header - Sidebar with date range and filters - Three main content areas - Info footer 3. Theme: - dashboardthemes::custom_theme - Blue/white color scheme Content Areas: 1. Overview - Summary metrics - Trend chart 2. Details - Data table - Filters 3. Analysis - Interactive plots - Download reports Widgets needed: - Date range picker Select inputs for filtering Action buttons for reports Data table with download Plot customization options Special features: - Loading spinners for plots - Collapsible sidebar - Error notifications - Export functionality "],["scratch.html", "Create code from scratch", " Create code from scratch Generate new code using a specific package Ingredients: Package name Specific task Any helpful context Instructions: Using package, write code to task. Context: constraints (optional) Tips: Add data structure for more specific results. Mention actual names of objects, rows and columns for easier pasting. Specify output format if you have a preference. Serves: Small workflows Best for discrete tasks rather than full applications. Works well for both data manipulation and visualization tasks. Example: Using dplyr, write code to filter the tibble my_tibble to rows in which the column employed is TRUE and assign the result to a new tibble called new_tibble. Context: Advanced programmer who is rusty with dplyr. Generate variations based on an example Generate unit tests for a function "],["demystifying-code-or-output-1.html", "Demystifying Code or Output", " Demystifying Code or Output Explain complex code Ingredients: Working code snippet Context about what seems unclear Instructions: Please explain how this code works: [paste code here] Specifically, I don’t understand [unclear parts]. Tips: - Share what you think it does to get better corrections - Include sample input/output if available - Mention your R experience level for appropriate detail - Point out specific lines or functions that confuse you Serves: - Complex functions or pipelines - Multi-step operations - Package-specific syntax questions - Unfamiliar coding patterns Example: Please explain how this code works: map_df(list_of_files, ~read_csv(.x) %&gt;% select(starts_with(&quot;Q&quot;)) %&gt;% pivot_longer(everything())) Specifically, I don’t understand what the .x does and why we need it. Context: Comfortable with basic R but new to purrr. Explain output Ingredients: - Complete output to examine - Function or method that generated it - What decisions you need to make from it - Your stats/methods background (optional) Instructions: Here’s the output from [function]: [paste output here] Please explain what this tells me about [key question]. Tips: - Include the code that generated the output if relevant - Highlight specific numbers you’re unsure about - Mention if you need plain English or technical terms - State if you need to report this for publication Serves: - Statistical output interpretation - Model diagnostics - Test results - Complex summaries Example: Here&#39;s the output from lm(): Call: lm(formula = weight ~ height + age, data = df) Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) -32.4521 8.4388 -3.845 0.000141 *** height 0.3128 0.0912 3.429 0.000684 *** age 0.0234 0.0412 0.568 0.570577 Please explain what this tells me about which predictors matter for weight. Context: Need to report key findings in Results section. "],["debugging.html", "Troubleshooting", " Troubleshooting Debug confusing error messages Fix a Git merge conflict "],["document.html", "Documentation", " Documentation Generate roxygen2 documentation Create README.md files Write package vignettes Document data dictionaries Create function usage examples "],["improve.html", "Code expansion or improvement", " Code expansion or improvement Optimize code for speed Add error handling Convert code to function Make code more modular "],["translate.html", "Translation", " Translation Translate coding languages Translate Word to markdown "],["generate.html", "Data generation", " Data generation Synthesize data to match what is need to run a script Synthesize data to match a set of column names "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
