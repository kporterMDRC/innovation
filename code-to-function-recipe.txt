---
title: "Convert Code to Function Recipe"
date: "`r Sys.Date()`"
output: html_document
---

# Convert Code to Function

## Ingredients

* Code to convert
* Desired inputs
* Expected outputs
* Use context
* Dependencies
* Requirements

## Instructions

Use this prompt template:

````
Please convert this code to a function:

```r
[paste code here]
```

### Function needs:
* Inputs needed:
    - [list variables to parameterize]
    - [expected types/formats]
* Output requirements:
    - [desired return value(s)]
    - [format specifications]
* Function features:
    - Name: [proposed name]
    - Arguments: [required/optional]
    - Returns: [return type]

### Code context:
* Purpose: [what code does]
* Current variables:
    - [list key variables]
    - [their current roles]
* Dependencies:
    - [required packages]
    - [external functions]

### Additional needs:
* Error handling: [yes/no]
* Documentation: [yes/no]
* Examples: [yes/no]
* Tests: [yes/no]
````

## Tips

* Choose clear name
* Identify parameters
* Structure returns
* Add documentation
* Include examples
* Consider scope
* Handle errors
* Test outputs

## Serves

* Script conversion
* Code modularization
* Process automation
* Package development
* Workflow improvement
* Code reuse
* API development

## Example

````
Please convert this code to a function:

```r
# Load required libraries
library(dplyr)
library(lubridate)

# Process sales data
sales_data <- read_csv("sales.csv")
monthly_sales <- sales_data %>%
  mutate(month = floor_date(date, "month")) %>%
  group_by(month, product) %>%
  summarize(
    total_sales = sum(amount),
    avg_price = mean(price),
    n_transactions = n()
  ) %>%
  ungroup() %>%
  arrange(month, desc(total_sales))

# Export results
write_csv(monthly_sales, "monthly_summary.csv")
```

### Function needs:
* Inputs needed:
    - Input file path
    - Output file path (optional)
    - Date column name
    - Grouping variables
* Output requirements:
    - Return monthly summary dataframe
    - Optional file export
* Function features:
    - Name: summarize_monthly_sales
    - Arguments: Both required and optional
    - Returns: Tibble with summaries

### Code context:
* Purpose: Summarize sales by month and product
* Current variables:
    - sales_data: Input dataframe
    - monthly_sales: Processed data
    - Various column names
* Dependencies:
    - dplyr
    - lubridate
    - readr

### Additional needs:
* Error handling: yes
* Documentation: yes
* Examples: yes
* Tests: no
````

## Conversion Process

### 1. Function Structure

1. **Identify Components**
   * Input parameters
   * Processing steps
   * Output format
   * Side effects

2. **Define Signature**
   * Function name
   * Required arguments
   * Optional arguments
   * Default values

3. **Handle Returns**
   * Return type
   * Multiple values
   * Side effects
   * Invisible returns

### 2. Parameter Design

1. **Required Parameters**
   * Core inputs
   * Essential options
   * Format specifications
   * Control flags

2. **Optional Parameters**
   * Default values
   * Override options
   * Customization
   * Extensions

3. **Validation Rules**
   * Type checking
   * Value ranges
   * Dependencies
   * Combinations

### 3. Documentation Elements

1. **Function Description**
   * Purpose
   * Usage
   * Returns
   * Details

2. **Parameter Documentation**
   * Types
   * Formats
   * Ranges
   * Dependencies

3. **Examples**
   * Basic usage
   * Common cases
   * Edge cases
   * Error cases

### 4. Testing Considerations

1. **Input Testing**
   * Valid inputs
   * Invalid inputs
   * Edge cases
   * Missing values

2. **Output Testing**
   * Expected results
   * Format checking
   * Error conditions
   * Performance

3. **Integration Testing**
   * Dependencies
   * Side effects
   * Resource usage
   * Error handling

